openapi: 3.0.3
tags:
  - name: daily-todo
    description: Daily ToDo Options
  - name: shopping-list
    description: Weekly Shopping-list Options
  - name: food-diary
    description: Operations about weekly food plan
  - name: finances
    description: Financial Options
  - name: hobbies
    description: Options about Hobbies
  - name: calendar
    description: Monthly planning Options
  - name: weekly-todo
    description: Weekly ToDo Options
paths:
  /daily-todo:
    get:
      tags:
        - daily-todo
      summary: Get all todos
      description: Returns all Todos
      operationId: getDailyTodos
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyToDo'  
        '404':
          description: todos not found
    put:
      tags:
        - daily-todo
      summary: Update an existing todo
      description: Update an existing todo by Id
      operationId: updateDailyTodo
      requestBody:
        description: Update an existent todo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailyToDo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyToDo'          
        '400':
          description: Invalid ID supplied
        '404':
          description: ToDo not found
    post:
      tags:
        - daily-todo
      summary: Add a new todo
      description: Add a new todo
      operationId: addTodo
      requestBody:
        description: Create a new Todo 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailyToDo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyToDo'          
        '405':
          description: Invalid input
  /daily-todo/{todo.id}:
    get:
      tags:
        - daily-todo
      summary: Find todo by ID
      description: Returns a single todo
      operationId: getTodo(id)
      parameters:
        - name: todo.id
          in: path
          description: ID of todo to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyToDo'  
        '400':
          description: Invalid ID supplied
        '404':
          description: todo not found
    delete:
      tags:
        - daily-todo
      summary: Deletes a todo
      description: delete a todo
      operationId: deleteDailyTodo(id)
      parameters:
        - name: todo.id
          in: path
          description: todo id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid todo value
  /weekly-todo:
    get:
      tags:
        - weekly-todo
      summary: Get all todos
      description: Returns all Todos
      operationId: getWeeklyTodos
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyToDo'  
        '404':
          description: todos not found
    put:
      tags:
        - weekly-todo
      summary: Update an existing todo
      description: Update an existing todo by Id
      operationId: updateWeeklyTodo
      requestBody:
        description: Update an existent todo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeklyToDo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyToDo'          
        '400':
          description: Invalid ID supplied
        '404':
          description: ToDo not found
    post:
      tags:
        - weekly-todo
      summary: Add a new todo
      description: Add a new todo
      operationId: addWeeklyTodo
      requestBody:
        description: Create a new Todo 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeklyToDo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyToDo'          
        '405':
          description: Invalid input
  /weekly-todo/{todo.id}:
    get:
      tags:
        - weekly-todo
      summary: Find todo by ID
      description: Returns a single todo
      operationId: getWeeklyTodo(id)
      parameters:
        - name: todo.id
          in: path
          description: ID of todo to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyToDo'  
        '400':
          description: Invalid ID supplied
        '404':
          description: todo not found
    delete:
      tags:
        - weekly-todo
      summary: Deletes a todo
      description: delete a todo
      operationId: deleteWeeklyTodo(id)
      parameters:
        - name: todo.id
          in: path
          description: todo id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid todo value
  
components:
  schemas:
    DailyToDo:
      required:
        - id
        - task
        - status
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        task:
          type: string
          example: einkaufen
    WeeklyToDo:
      required:
        - id
        - task
        - status
        - done_by
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        task:
          type: string
          example: einkaufen
        done_by:
          type: string
          format: date-time
          example: 07-12-2022